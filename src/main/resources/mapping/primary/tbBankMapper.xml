<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.junling.mis.mapper.primary.TbBankMapper" >
  <resultMap id="BaseResultMap" type="com.junling.mis.model.primary.TbBank" >
    <id column="bank_code" property="bankCode" jdbcType="VARCHAR" />
    <result column="bank_name" property="bankName" jdbcType="VARCHAR" />
    <result column="bank_parent_code" property="bankParentCode" jdbcType="VARCHAR" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="district_code" property="districtCode" jdbcType="VARCHAR" />
    <result column="grade_levle" property="gradeLevle" jdbcType="VARCHAR" />
    <result column="created_by" property="createdBy" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="updated_by" property="updatedBy" jdbcType="VARCHAR" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    bank_code, bank_name, bank_parent_code, province, city, district_code, grade_levle, 
    created_by, created_time, updated_by, updated_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tb_bank
    where bank_code = #{bankCode,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tb_bank
    where bank_code = #{bankCode,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.junling.mis.model.primary.TbBank" >
    insert into tb_bank (bank_code, bank_name, bank_parent_code, 
      province, city, district_code, 
      grade_levle, created_by, created_time, 
      updated_by, updated_time)
    values (#{bankCode,jdbcType=VARCHAR}, #{bankName,jdbcType=VARCHAR}, #{bankParentCode,jdbcType=VARCHAR}, 
      #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{districtCode,jdbcType=VARCHAR}, 
      #{gradeLevle,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{updatedBy,jdbcType=VARCHAR}, #{updatedTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.junling.mis.model.primary.TbBank" >
    insert into tb_bank
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bankCode != null" >
        bank_code,
      </if>
      <if test="bankName != null" >
        bank_name,
      </if>
      <if test="bankParentCode != null" >
        bank_parent_code,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="districtCode != null" >
        district_code,
      </if>
      <if test="gradeLevle != null" >
        grade_levle,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="updatedBy != null" >
        updated_by,
      </if>
      <if test="updatedTime != null" >
        updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bankCode != null" >
        #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankParentCode != null" >
        #{bankParentCode,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="districtCode != null" >
        #{districtCode,jdbcType=VARCHAR},
      </if>
      <if test="gradeLevle != null" >
        #{gradeLevle,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null" >
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.junling.mis.model.primary.TbBank" >
    update tb_bank
    <set >
      <if test="bankName != null" >
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankParentCode != null" >
        bank_parent_code = #{bankParentCode,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="districtCode != null" >
        district_code = #{districtCode,jdbcType=VARCHAR},
      </if>
      <if test="gradeLevle != null" >
        grade_levle = #{gradeLevle,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where bank_code = #{bankCode,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.junling.mis.model.primary.TbBank" >
    update tb_bank
    set bank_name = #{bankName,jdbcType=VARCHAR},
      bank_parent_code = #{bankParentCode,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      district_code = #{districtCode,jdbcType=VARCHAR},
      grade_levle = #{gradeLevle,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where bank_code = #{bankCode,jdbcType=VARCHAR}
  </update>
</mapper>