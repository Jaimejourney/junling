<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.junling.mis.mapper.primary.ClaimAccountInfoMapper" >
  <resultMap id="BaseResultMap" type="com.junling.mis.model.primary.ClaimAccountInfo" >
    <id column="account_id" property="accountId" jdbcType="VARCHAR" />
    <id column="claim_info_id" property="claimInfoId" jdbcType="VARCHAR" />
    <id column="account_name" property="accountName" jdbcType="VARCHAR" />
    <result column="account_no" property="accountNo" jdbcType="VARCHAR" />
    <result column="bank_no" property="bankNo" jdbcType="VARCHAR" />
    <result column="pay_amonut" property="payAmonut" jdbcType="INTEGER" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="created_by" property="createdBy" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="updated_by" property="updatedBy" jdbcType="VARCHAR" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    account_id, claim_info_id, account_name, account_no, bank_no, pay_amonut, pay_time, 
    created_by, created_time, updated_by, updated_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.junling.mis.model.primary.ClaimAccountInfoKey" >
    select 
    <include refid="Base_Column_List" />
    from claim_account_info
    where account_id = #{accountId,jdbcType=VARCHAR}
      and claim_info_id = #{claimInfoId,jdbcType=VARCHAR}
      and account_name = #{accountName,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.junling.mis.model.primary.ClaimAccountInfoKey" >
    delete from claim_account_info
    where account_id = #{accountId,jdbcType=VARCHAR}
      and claim_info_id = #{claimInfoId,jdbcType=VARCHAR}
      and account_name = #{accountName,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.junling.mis.model.primary.ClaimAccountInfo" >
    insert into claim_account_info (account_id, claim_info_id, account_name, 
      account_no, bank_no, pay_amonut, 
      pay_time, created_by, created_time, 
      updated_by, updated_time)
    values (#{accountId,jdbcType=VARCHAR}, #{claimInfoId,jdbcType=VARCHAR}, #{accountName,jdbcType=VARCHAR}, 
      #{accountNo,jdbcType=VARCHAR}, #{bankNo,jdbcType=VARCHAR}, #{payAmonut,jdbcType=INTEGER}, 
      #{payTime,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{updatedBy,jdbcType=VARCHAR}, #{updatedTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.junling.mis.model.primary.ClaimAccountInfo" >
    insert into claim_account_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="claimInfoId != null" >
        claim_info_id,
      </if>
      <if test="accountName != null" >
        account_name,
      </if>
      <if test="accountNo != null" >
        account_no,
      </if>
      <if test="bankNo != null" >
        bank_no,
      </if>
      <if test="payAmonut != null" >
        pay_amonut,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="updatedBy != null" >
        updated_by,
      </if>
      <if test="updatedTime != null" >
        updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="claimInfoId != null" >
        #{claimInfoId,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null" >
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountNo != null" >
        #{accountNo,jdbcType=VARCHAR},
      </if>
      <if test="bankNo != null" >
        #{bankNo,jdbcType=VARCHAR},
      </if>
      <if test="payAmonut != null" >
        #{payAmonut,jdbcType=INTEGER},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null" >
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.junling.mis.model.primary.ClaimAccountInfo" >
    update claim_account_info
    <set >
      <if test="accountNo != null" >
        account_no = #{accountNo,jdbcType=VARCHAR},
      </if>
      <if test="bankNo != null" >
        bank_no = #{bankNo,jdbcType=VARCHAR},
      </if>
      <if test="payAmonut != null" >
        pay_amonut = #{payAmonut,jdbcType=INTEGER},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where account_id = #{accountId,jdbcType=VARCHAR}
      and claim_info_id = #{claimInfoId,jdbcType=VARCHAR}
      and account_name = #{accountName,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.junling.mis.model.primary.ClaimAccountInfo" >
    update claim_account_info
    set account_no = #{accountNo,jdbcType=VARCHAR},
      bank_no = #{bankNo,jdbcType=VARCHAR},
      pay_amonut = #{payAmonut,jdbcType=INTEGER},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where account_id = #{accountId,jdbcType=VARCHAR}
      and claim_info_id = #{claimInfoId,jdbcType=VARCHAR}
      and account_name = #{accountName,jdbcType=VARCHAR}
  </update>
</mapper>