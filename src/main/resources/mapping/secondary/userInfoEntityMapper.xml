<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.junling.mis.mapper.secondary.userInfoEntityMapper" >
  <resultMap id="BaseResultMap" type="com.junling.mis.model.secondary.userInfoEntity" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="channel" property="channel" jdbcType="VARCHAR" />
    <result column="open_id" property="openId" jdbcType="VARCHAR" />
    <result column="created_date" property="createdDate" jdbcType="TIMESTAMP" />
    <result column="updated_date" property="updatedDate" jdbcType="TIMESTAMP" />
    <result column="case_type" property="caseType" jdbcType="VARCHAR" />
    <result column="docuno_num" property="docunoNum" jdbcType="INTEGER" />
    <result column="role_type" property="roleType" jdbcType="VARCHAR" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="out_user_id" property="outUserId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, user_name, real_name, password, role_id, channel, open_id, created_date, 
    updated_date, case_type, docuno_num, role_type, openid, token, out_user_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_info
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_info
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.junling.mis.model.secondary.userInfoEntity" >
    insert into user_info (user_id, user_name, real_name, 
      password, role_id, channel, 
      open_id, created_date, updated_date, 
      case_type, docuno_num, role_type, 
      openid, token, out_user_id
      )
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}, #{channel,jdbcType=VARCHAR}, 
      #{openId,jdbcType=VARCHAR}, #{createdDate,jdbcType=TIMESTAMP}, #{updatedDate,jdbcType=TIMESTAMP}, 
      #{caseType,jdbcType=VARCHAR}, #{docunoNum,jdbcType=INTEGER}, #{roleType,jdbcType=VARCHAR}, 
      #{openid,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, #{outUserId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.junling.mis.model.secondary.userInfoEntity" >
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="channel != null" >
        channel,
      </if>
      <if test="openId != null" >
        open_id,
      </if>
      <if test="createdDate != null" >
        created_date,
      </if>
      <if test="updatedDate != null" >
        updated_date,
      </if>
      <if test="caseType != null" >
        case_type,
      </if>
      <if test="docunoNum != null" >
        docuno_num,
      </if>
      <if test="roleType != null" >
        role_type,
      </if>
      <if test="openid != null" >
        openid,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="outUserId != null" >
        out_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="channel != null" >
        #{channel,jdbcType=VARCHAR},
      </if>
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null" >
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDate != null" >
        #{updatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="caseType != null" >
        #{caseType,jdbcType=VARCHAR},
      </if>
      <if test="docunoNum != null" >
        #{docunoNum,jdbcType=INTEGER},
      </if>
      <if test="roleType != null" >
        #{roleType,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="outUserId != null" >
        #{outUserId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.junling.mis.model.secondary.userInfoEntity" >
    update user_info
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="channel != null" >
        channel = #{channel,jdbcType=VARCHAR},
      </if>
      <if test="openId != null" >
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null" >
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDate != null" >
        updated_date = #{updatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="caseType != null" >
        case_type = #{caseType,jdbcType=VARCHAR},
      </if>
      <if test="docunoNum != null" >
        docuno_num = #{docunoNum,jdbcType=INTEGER},
      </if>
      <if test="roleType != null" >
        role_type = #{roleType,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="outUserId != null" >
        out_user_id = #{outUserId,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.junling.mis.model.secondary.userInfoEntity" >
    update user_info
    set user_name = #{userName,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      channel = #{channel,jdbcType=VARCHAR},
      open_id = #{openId,jdbcType=VARCHAR},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      updated_date = #{updatedDate,jdbcType=TIMESTAMP},
      case_type = #{caseType,jdbcType=VARCHAR},
      docuno_num = #{docunoNum,jdbcType=INTEGER},
      role_type = #{roleType,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR},
      out_user_id = #{outUserId,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>