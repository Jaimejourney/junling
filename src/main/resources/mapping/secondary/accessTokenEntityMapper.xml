<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.junling.mis.mapper.secondary.accessTokenEntityMapper" >
  <resultMap id="BaseResultMap" type="com.junling.mis.model.secondary.accessTokenEntity" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="access_token" property="accessToken" jdbcType="VARCHAR" />
    <result column="token_type" property="tokenType" jdbcType="VARCHAR" />
    <result column="expires_in" property="expiresIn" jdbcType="INTEGER" />
    <result column="scope" property="scope" jdbcType="VARCHAR" />
    <result column="jti" property="jti" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, access_token, token_type, expires_in, scope, jti
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from access_token
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from access_token
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.junling.mis.model.secondary.accessTokenEntity" >
    insert into access_token (id, access_token, token_type, 
      expires_in, scope, jti
      )
    values (#{id,jdbcType=VARCHAR}, #{accessToken,jdbcType=VARCHAR}, #{tokenType,jdbcType=VARCHAR}, 
      #{expiresIn,jdbcType=INTEGER}, #{scope,jdbcType=VARCHAR}, #{jti,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.junling.mis.model.secondary.accessTokenEntity" >
    insert into access_token
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="accessToken != null" >
        access_token,
      </if>
      <if test="tokenType != null" >
        token_type,
      </if>
      <if test="expiresIn != null" >
        expires_in,
      </if>
      <if test="scope != null" >
        scope,
      </if>
      <if test="jti != null" >
        jti,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="accessToken != null" >
        #{accessToken,jdbcType=VARCHAR},
      </if>
      <if test="tokenType != null" >
        #{tokenType,jdbcType=VARCHAR},
      </if>
      <if test="expiresIn != null" >
        #{expiresIn,jdbcType=INTEGER},
      </if>
      <if test="scope != null" >
        #{scope,jdbcType=VARCHAR},
      </if>
      <if test="jti != null" >
        #{jti,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.junling.mis.model.secondary.accessTokenEntity" >
    update access_token
    <set >
      <if test="accessToken != null" >
        access_token = #{accessToken,jdbcType=VARCHAR},
      </if>
      <if test="tokenType != null" >
        token_type = #{tokenType,jdbcType=VARCHAR},
      </if>
      <if test="expiresIn != null" >
        expires_in = #{expiresIn,jdbcType=INTEGER},
      </if>
      <if test="scope != null" >
        scope = #{scope,jdbcType=VARCHAR},
      </if>
      <if test="jti != null" >
        jti = #{jti,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.junling.mis.model.secondary.accessTokenEntity" >
    update access_token
    set access_token = #{accessToken,jdbcType=VARCHAR},
      token_type = #{tokenType,jdbcType=VARCHAR},
      expires_in = #{expiresIn,jdbcType=INTEGER},
      scope = #{scope,jdbcType=VARCHAR},
      jti = #{jti,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>