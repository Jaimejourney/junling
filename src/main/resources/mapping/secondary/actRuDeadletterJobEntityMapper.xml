<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.junling.mis.mapper.secondary.ActRuDeadletterJobEntityMapper" >
  <resultMap id="BaseResultMap" type="com.junling.mis.model.secondary.ActRuDeadletterJobEntity" >
    <id column="ID_" property="id" jdbcType="VARCHAR" />
    <result column="REV_" property="rev" jdbcType="INTEGER" />
    <result column="TYPE_" property="type" jdbcType="VARCHAR" />
    <result column="EXCLUSIVE_" property="exclusive" jdbcType="BIT" />
    <result column="EXECUTION_ID_" property="executionId" jdbcType="VARCHAR" />
    <result column="PROCESS_INSTANCE_ID_" property="processInstanceId" jdbcType="VARCHAR" />
    <result column="PROC_DEF_ID_" property="procDefId" jdbcType="VARCHAR" />
    <result column="EXCEPTION_STACK_ID_" property="exceptionStackId" jdbcType="VARCHAR" />
    <result column="EXCEPTION_MSG_" property="exceptionMsg" jdbcType="VARCHAR" />
    <result column="DUEDATE_" property="duedate" jdbcType="TIMESTAMP" />
    <result column="REPEAT_" property="repeat" jdbcType="VARCHAR" />
    <result column="HANDLER_TYPE_" property="handlerType" jdbcType="VARCHAR" />
    <result column="HANDLER_CFG_" property="handlerCfg" jdbcType="VARCHAR" />
    <result column="CREATE_TIME_" property="createTime" jdbcType="TIMESTAMP" />
    <result column="TENANT_ID_" property="tenantId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID_, REV_, TYPE_, EXCLUSIVE_, EXECUTION_ID_, PROCESS_INSTANCE_ID_, PROC_DEF_ID_, 
    EXCEPTION_STACK_ID_, EXCEPTION_MSG_, DUEDATE_, REPEAT_, HANDLER_TYPE_, HANDLER_CFG_, 
    CREATE_TIME_, TENANT_ID_
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from act_ru_deadletter_job
    where ID_ = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from act_ru_deadletter_job
    where ID_ = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.junling.mis.model.secondary.ActRuDeadletterJobEntity" >
    insert into act_ru_deadletter_job (ID_, REV_, TYPE_, 
      EXCLUSIVE_, EXECUTION_ID_, PROCESS_INSTANCE_ID_, 
      PROC_DEF_ID_, EXCEPTION_STACK_ID_, EXCEPTION_MSG_, 
      DUEDATE_, REPEAT_, HANDLER_TYPE_, 
      HANDLER_CFG_, CREATE_TIME_, TENANT_ID_
      )
    values (#{id,jdbcType=VARCHAR}, #{rev,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, 
      #{exclusive,jdbcType=BIT}, #{executionId,jdbcType=VARCHAR}, #{processInstanceId,jdbcType=VARCHAR}, 
      #{procDefId,jdbcType=VARCHAR}, #{exceptionStackId,jdbcType=VARCHAR}, #{exceptionMsg,jdbcType=VARCHAR}, 
      #{duedate,jdbcType=TIMESTAMP}, #{repeat,jdbcType=VARCHAR}, #{handlerType,jdbcType=VARCHAR}, 
      #{handlerCfg,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{tenantId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.junling.mis.model.secondary.ActRuDeadletterJobEntity" >
    insert into act_ru_deadletter_job
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID_,
      </if>
      <if test="rev != null" >
        REV_,
      </if>
      <if test="type != null" >
        TYPE_,
      </if>
      <if test="exclusive != null" >
        EXCLUSIVE_,
      </if>
      <if test="executionId != null" >
        EXECUTION_ID_,
      </if>
      <if test="processInstanceId != null" >
        PROCESS_INSTANCE_ID_,
      </if>
      <if test="procDefId != null" >
        PROC_DEF_ID_,
      </if>
      <if test="exceptionStackId != null" >
        EXCEPTION_STACK_ID_,
      </if>
      <if test="exceptionMsg != null" >
        EXCEPTION_MSG_,
      </if>
      <if test="duedate != null" >
        DUEDATE_,
      </if>
      <if test="repeat != null" >
        REPEAT_,
      </if>
      <if test="handlerType != null" >
        HANDLER_TYPE_,
      </if>
      <if test="handlerCfg != null" >
        HANDLER_CFG_,
      </if>
      <if test="createTime != null" >
        CREATE_TIME_,
      </if>
      <if test="tenantId != null" >
        TENANT_ID_,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="rev != null" >
        #{rev,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="exclusive != null" >
        #{exclusive,jdbcType=BIT},
      </if>
      <if test="executionId != null" >
        #{executionId,jdbcType=VARCHAR},
      </if>
      <if test="processInstanceId != null" >
        #{processInstanceId,jdbcType=VARCHAR},
      </if>
      <if test="procDefId != null" >
        #{procDefId,jdbcType=VARCHAR},
      </if>
      <if test="exceptionStackId != null" >
        #{exceptionStackId,jdbcType=VARCHAR},
      </if>
      <if test="exceptionMsg != null" >
        #{exceptionMsg,jdbcType=VARCHAR},
      </if>
      <if test="duedate != null" >
        #{duedate,jdbcType=TIMESTAMP},
      </if>
      <if test="repeat != null" >
        #{repeat,jdbcType=VARCHAR},
      </if>
      <if test="handlerType != null" >
        #{handlerType,jdbcType=VARCHAR},
      </if>
      <if test="handlerCfg != null" >
        #{handlerCfg,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tenantId != null" >
        #{tenantId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.junling.mis.model.secondary.ActRuDeadletterJobEntity" >
    update act_ru_deadletter_job
    <set >
      <if test="rev != null" >
        REV_ = #{rev,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        TYPE_ = #{type,jdbcType=VARCHAR},
      </if>
      <if test="exclusive != null" >
        EXCLUSIVE_ = #{exclusive,jdbcType=BIT},
      </if>
      <if test="executionId != null" >
        EXECUTION_ID_ = #{executionId,jdbcType=VARCHAR},
      </if>
      <if test="processInstanceId != null" >
        PROCESS_INSTANCE_ID_ = #{processInstanceId,jdbcType=VARCHAR},
      </if>
      <if test="procDefId != null" >
        PROC_DEF_ID_ = #{procDefId,jdbcType=VARCHAR},
      </if>
      <if test="exceptionStackId != null" >
        EXCEPTION_STACK_ID_ = #{exceptionStackId,jdbcType=VARCHAR},
      </if>
      <if test="exceptionMsg != null" >
        EXCEPTION_MSG_ = #{exceptionMsg,jdbcType=VARCHAR},
      </if>
      <if test="duedate != null" >
        DUEDATE_ = #{duedate,jdbcType=TIMESTAMP},
      </if>
      <if test="repeat != null" >
        REPEAT_ = #{repeat,jdbcType=VARCHAR},
      </if>
      <if test="handlerType != null" >
        HANDLER_TYPE_ = #{handlerType,jdbcType=VARCHAR},
      </if>
      <if test="handlerCfg != null" >
        HANDLER_CFG_ = #{handlerCfg,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME_ = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tenantId != null" >
        TENANT_ID_ = #{tenantId,jdbcType=VARCHAR},
      </if>
    </set>
    where ID_ = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.junling.mis.model.secondary.ActRuDeadletterJobEntity" >
    update act_ru_deadletter_job
    set REV_ = #{rev,jdbcType=INTEGER},
      TYPE_ = #{type,jdbcType=VARCHAR},
      EXCLUSIVE_ = #{exclusive,jdbcType=BIT},
      EXECUTION_ID_ = #{executionId,jdbcType=VARCHAR},
      PROCESS_INSTANCE_ID_ = #{processInstanceId,jdbcType=VARCHAR},
      PROC_DEF_ID_ = #{procDefId,jdbcType=VARCHAR},
      EXCEPTION_STACK_ID_ = #{exceptionStackId,jdbcType=VARCHAR},
      EXCEPTION_MSG_ = #{exceptionMsg,jdbcType=VARCHAR},
      DUEDATE_ = #{duedate,jdbcType=TIMESTAMP},
      REPEAT_ = #{repeat,jdbcType=VARCHAR},
      HANDLER_TYPE_ = #{handlerType,jdbcType=VARCHAR},
      HANDLER_CFG_ = #{handlerCfg,jdbcType=VARCHAR},
      CREATE_TIME_ = #{createTime,jdbcType=TIMESTAMP},
      TENANT_ID_ = #{tenantId,jdbcType=VARCHAR}
    where ID_ = #{id,jdbcType=VARCHAR}
  </update>
</mapper>