<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.junling.mis.mapper.secondary.SysExpenseEntityMapper" >
  <resultMap id="BaseResultMap" type="com.junling.mis.model.secondary.SysExpenseEntity" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="desc" property="desc" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="processId" property="processid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, money, desc, createtime, state, userid, processId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_expense
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_expense
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.junling.mis.model.secondary.SysExpenseEntity" >
    insert into sys_expense (id, money, desc, 
      createtime, state, userid, 
      processId)
    values (#{id,jdbcType=INTEGER}, #{money,jdbcType=DECIMAL}, #{desc,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, 
      #{processid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.junling.mis.model.secondary.SysExpenseEntity" >
    insert into sys_expense
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="desc != null" >
        desc,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="processid != null" >
        processId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="desc != null" >
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="processid != null" >
        #{processid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.junling.mis.model.secondary.SysExpenseEntity" >
    update sys_expense
    <set >
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="desc != null" >
        desc = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="processid != null" >
        processId = #{processid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.junling.mis.model.secondary.SysExpenseEntity" >
    update sys_expense
    set money = #{money,jdbcType=DECIMAL},
      desc = #{desc,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      userid = #{userid,jdbcType=INTEGER},
      processId = #{processid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>