<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.junling.mis.mapper.secondary.ActHiIdentitylinkEntityMapper" >
  <resultMap id="BaseResultMap" type="com.junling.mis.model.secondary.ActHiIdentitylinkEntity" >
    <id column="ID_" property="id" jdbcType="VARCHAR" />
    <result column="GROUP_ID_" property="groupId" jdbcType="VARCHAR" />
    <result column="TYPE_" property="type" jdbcType="VARCHAR" />
    <result column="USER_ID_" property="userId" jdbcType="VARCHAR" />
    <result column="TASK_ID_" property="taskId" jdbcType="VARCHAR" />
    <result column="CREATE_TIME_" property="createTime" jdbcType="TIMESTAMP" />
    <result column="PROC_INST_ID_" property="procInstId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID_, GROUP_ID_, TYPE_, USER_ID_, TASK_ID_, CREATE_TIME_, PROC_INST_ID_
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from act_hi_identitylink
    where ID_ = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from act_hi_identitylink
    where ID_ = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.junling.mis.model.secondary.ActHiIdentitylinkEntity" >
    insert into act_hi_identitylink (ID_, GROUP_ID_, TYPE_, 
      USER_ID_, TASK_ID_, CREATE_TIME_, 
      PROC_INST_ID_)
    values (#{id,jdbcType=VARCHAR}, #{groupId,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{taskId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{procInstId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.junling.mis.model.secondary.ActHiIdentitylinkEntity" >
    insert into act_hi_identitylink
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID_,
      </if>
      <if test="groupId != null" >
        GROUP_ID_,
      </if>
      <if test="type != null" >
        TYPE_,
      </if>
      <if test="userId != null" >
        USER_ID_,
      </if>
      <if test="taskId != null" >
        TASK_ID_,
      </if>
      <if test="createTime != null" >
        CREATE_TIME_,
      </if>
      <if test="procInstId != null" >
        PROC_INST_ID_,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null" >
        #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="procInstId != null" >
        #{procInstId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.junling.mis.model.secondary.ActHiIdentitylinkEntity" >
    update act_hi_identitylink
    <set >
      <if test="groupId != null" >
        GROUP_ID_ = #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        TYPE_ = #{type,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        USER_ID_ = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null" >
        TASK_ID_ = #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME_ = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="procInstId != null" >
        PROC_INST_ID_ = #{procInstId,jdbcType=VARCHAR},
      </if>
    </set>
    where ID_ = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.junling.mis.model.secondary.ActHiIdentitylinkEntity" >
    update act_hi_identitylink
    set GROUP_ID_ = #{groupId,jdbcType=VARCHAR},
      TYPE_ = #{type,jdbcType=VARCHAR},
      USER_ID_ = #{userId,jdbcType=VARCHAR},
      TASK_ID_ = #{taskId,jdbcType=VARCHAR},
      CREATE_TIME_ = #{createTime,jdbcType=TIMESTAMP},
      PROC_INST_ID_ = #{procInstId,jdbcType=VARCHAR}
    where ID_ = #{id,jdbcType=VARCHAR}
  </update>
</mapper>